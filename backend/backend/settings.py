"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-7b)+3vx^^$0g9&tj=cx%_!l2cfb$dnynst_=_*15-li)srm_i!"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["apigc.ayltispa.com", "localhost", "127.0.0.1"]

CSRF_TRUSTED_ORIGINS = [
    "https://apigc.ayltispa.com",
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "api",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",  # Debe ir antes de CommonMiddleware
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# Configuración de CORS para permitir que React se comunique con Django
CORS_ALLOWED_ORIGINS = [
    "https://gcmailing.ayltispa.com",  # dominio de producción
    "http://localhost:3000",  # El puerto por defecto de React en desarrollo
]


# Configuración de CORS para permitir que React se comunique con Django.
# CORS_ALLOW_ALL_ORIGINS = True

# --- INICIO DE CAMBIOS ---
# Se añade la cabecera de ngrok a la lista de cabeceras permitidas por CORS.
# Esto soluciona el error "Request header field ngrok-skip-browser-warning is not allowed".
from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = list(default_headers) + [
    "ngrok-skip-browser-warning",
]
# --- FIN DE CAMBIOS ---

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configuración de la Base de Datos (PostgreSQL)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "gastos_comunes_db",  # El nombre de tu base de datos
        "USER": "neunapp",  # Tu usuario de PostgreSQL
        "PASSWORD": "neunappcursopro",  # Tu contraseña de PostgreSQL
        "HOST": "localhost",
        "PORT": "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Configuración del Servidor de Correo (Ejemplo con Gmail)
# ¡IMPORTANTE! Si usas Gmail, necesitas generar una "Contraseña de aplicación".
# No uses tu contraseña normal.
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = "renato.cornejo@t2b.cl"  # Tu dirección de correo
# EMAIL_HOST_PASSWORD = "tigcbcihikfcywkp"  # Tu contraseña de aplicación de Gmail
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# --- INICIO DE CAMBIOS: Configuración de Email con OAuth2 ---
# Elimina las configuraciones anteriores de EMAIL_BACKEND, EMAIL_HOST, etc.
# Añade tus credenciales obtenidas de Google Cloud Console.
EMAIL_OAUTH2_USER = (
    "gc.cerroelalto@gmail.com"  # El correo desde el que se enviarán los emails
)
EMAIL_OAUTH2_CLIENT_ID = (
    "380799892504-ftc1iphldrc5v2c6sd8f2dupjjodt04a.apps.googleusercontent.com"
)
EMAIL_OAUTH2_CLIENT_SECRET = "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"
EMAIL_OAUTH2_REFRESH_TOKEN = "1//0hpSKh44LrGb4CgYIARAAGBESNwF-L9IrLwX185u7qTk6LxzgcwP-RudTwmKGKtYbhUhHUTsnSwFRnKMWJ4kg4nTr2vKyO1vrJUc"
# --- FIN DE CAMBIOS ---
